gtess2:
geometry:
points, segments, polys
dimensions:
length, angle, time
metrics:
ab distance, abc angle, seg length, seg angle, poly area
constraints:
equal length (nsect), equal angle (parallel, perpendicular, nsect)

fully constrained 2d geometry has 4 degrees of freedom
unless it's a single point in which case it's only two
and a collection of n points without constraints has 2n
degrees of freedom, so we need 2n-4 constraints plus more if
there's redundancy.  I guess I want to be able to tell
how many degrees of freedom there are left at any point.
Essentially we'll have some equations f(x)=g(x) and looking
at the derivatives we should be able to determine the dimension
of the solution set.

Simple example I guess: three points (a, b), (c, d), (x, y)
with (a, b) and (c, d) equidistant from (x, y).

(a-x)^2 + (b-y)^2 = (c-x)^2 + (d-y)^2
a^2-2ax + b^2-2by = c^2-2cx + d^2-2dy

It will probably be helpful to assign energy to configurations and
minimize it (like I did for the origami simulator).
We can assign a mass to the points, although it will change which
is bad.  We can find the area of every polygon,
and if we gave every point a weight of the average areas of the
polygons which have it as a vertex then this doesn't make sense.
If for every n-gon we add 1/n its area to the mass of all of its
vertices this makes more sense and give us a total mass of the total
area.  So to make the total mass not change we could divide every mass
by the total mass and this should be good.  A slightly better mass
computation would use voroni diagrams.

Now we will have masses and we can define potentials for different
constraints so we get energy/forces, and we'll have net motion
in four degrees of freedom to normalize, plus apply friction to
kinetic energy.  The four degrees of freedom in net motion are x
and y translation, z rotation, and expansion/contraction.  These
should all be zero.

Estimating degrees of freedom from examples seems really hard
If I have n points and k constraints, I have at least 2n-k
degrees of freedom and at most 2n-1.
The positions of the points will not be nice at all, even if we
normalize or something.
The distances and angles between points should give us some
insight, although unfortunately there will be (n 3) + (n 2)
such measurements to consider, (n^3 + 3*n^2 - 4*n)/6 measurements
even though we know there are at most 2n degrees of freedom
(when there are no constraints).